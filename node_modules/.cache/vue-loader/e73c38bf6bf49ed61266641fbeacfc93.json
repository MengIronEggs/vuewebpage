{"remainingRequest":"/Users/ningmeng/Desktop/vuewebpage/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ningmeng/Desktop/vuewebpage/src/components/Menus.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/ningmeng/Desktop/vuewebpage/src/components/Menus.vue","mtime":1567583628137},{"path":"/Users/ningmeng/Desktop/vuewebpage/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/ningmeng/Desktop/vuewebpage/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/ningmeng/Desktop/vuewebpage/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/ningmeng/Desktop/vuewebpage/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ningmeng/Desktop/vuewebpage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ningmeng/Desktop/vuewebpage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n.ui-menus-list {\n  background: #3e3f41;\n\n  .el-menu-vertical-demo {\n    border-radius: 0;\n  }\n\n  .el-menu--horizontal.el-menu--dark .el-submenu .el-menu-item.is-active,\n  .el-menu-item.is-active {\n    color: #000;\n    background: #fff !important;\n  }\n  .el-menu-item,\n  .el-submenu__title {\n    color: #fff;\n    height: 51px;\n    line-height: 51px;\n  }\n  .el-menu-item:hover,\n  .el-submenu__title:hover {\n    background: #646567 !important;\n    color: #fff;\n  }\n\n  .el-submenu {\n    .el-menu-item {\n      background: #2b2b2b;\n    }\n  }\n}\n",{"version":3,"sources":["Menus.vue"],"names":[],"mappings":";AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Menus.vue","sourceRoot":"src/components","sourcesContent":["<style lang=\"less\">\n.ui-menus-list {\n  background: #3e3f41;\n\n  .el-menu-vertical-demo {\n    border-radius: 0;\n  }\n\n  .el-menu--horizontal.el-menu--dark .el-submenu .el-menu-item.is-active,\n  .el-menu-item.is-active {\n    color: #000;\n    background: #fff !important;\n  }\n  .el-menu-item,\n  .el-submenu__title {\n    color: #fff;\n    height: 51px;\n    line-height: 51px;\n  }\n  .el-menu-item:hover,\n  .el-submenu__title:hover {\n    background: #646567 !important;\n    color: #fff;\n  }\n\n  .el-submenu {\n    .el-menu-item {\n      background: #2b2b2b;\n    }\n  }\n}\n</style>\n<style scoped lang=\"less\">\n.ui-menus-list {\n  width: 230px;\n  position: absolute;\n  top: 60px;\n  bottom: 0;\n  left: 0;\n  overflow-y: auto;\n\n  .el-menu {\n    height: 100%;\n    background: #3e3f41;\n\n    .el-submenu {\n      border-top: 1px solid #252726;\n    }\n\n    .el-menu-item {\n      border-top: 1px solid #252726;\n    }\n  }\n}\n</style>\n\n<template>\n  <div class=\"ui-menus-list\">\n    <!--导航菜单-->\n    <el-menu\n      class=\"el-menu-vertical-demo\"\n      unique-opened\n      :default-active=\"active\"\n      :default-openeds=\"opened\"\n      :router=\"true\"\n    >\n      <!-- <template v-for=\"(pItem, p_index) in menuTree\"> -->\n      <template v-for=\"(pItem) in menuTree\">\n        <template v-if=\"pItem.son === undefined\">\n          <el-menu-item :index=\"pItem.id\" :key=\"pItem.id\" @click=\"clearCache\">{{pItem.name}}</el-menu-item>\n        </template>\n\n        <el-submenu v-if=\"pItem.son !== undefined\" :key=\"pItem.id\" :index=\"pItem.id\">\n          <template slot=\"title\">{{pItem.name}}</template>\n          <!-- <template v-for=\"(sItem, s_index) in pItem.son\"> -->\n          <template v-for=\"(sItem) in pItem.son\">\n            <el-menu-item :index=\"sItem.id\" :key=\"sItem.id\" @click=\"clearCache\">{{sItem.name}}</el-menu-item>\n          </template>\n        </el-submenu>\n      </template>\n    </el-menu>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      menuTree: [\n        { id: \"/home\", name: \"首页\", order: 0 },\n        {\n          id: \"/hjgl\",\n          name: \"环境管理\",\n          order: 0,\n          son: [\n            { id: \"/hjgl\", name: \"环境统计\", order: 0 },\n            { id: \"/hjxq\", name: \"环境详情\", order: 0 },\n            { id: \"/hjbb\", name: \"环境报表\", order: 0 }\n          ]\n        },\n        {\n          id: \"/lwgl\",\n          name: \"劳务管理\",\n          order: 0,\n          son: [\n            { id: \"/lwtj\", name: \"劳务统计\", order: 0 },\n            { id: \"/lwxq\", name: \"劳务详情\", order: 0 },\n            { id: \"/lwbb\", name: \"劳务报表\", order: 0 }\n          ]\n        },\n        {\n          id: \"/aqtj\",\n          name: \"安全管理\",\n          order: 0,\n          son: [\n            { id: \"/aqtj\", name: \"安全统计\", order: 0 },\n            { id: \"/aqxq\", name: \"安全详情\", order: 0 },\n            { id: \"/aqbb\", name: \"安全报表\", order: 0 }\n          ]\n        },\n        {\n          id: \"/jdtj\",\n          name: \"进度管理\",\n          order: 0,\n          son: [\n            { id: \"/jdtj\", name: \"进度统计\", order: 0 },\n            { id: \"/jdxq\", name: \"进度详情\", order: 0 },\n            { id: \"/jdbb\", name: \"进度报表\", order: 0 }\n          ]\n        },\n        {\n          id: \"/zltj\",\n          name: \"质量管理\",\n          order: 0,\n          son: [\n            { id: \"/zltj\", name: \"质量统计\", order: 0 },\n            { id: \"/zlxq\", name: \"质量详情\", order: 0 },\n            { id: \"/zlbb\", name: \"质量报表\", order: 0 }\n          ]\n        },\n        {\n          id: \"/spjk\",\n          name: \"视频管理\",\n          order: 0,\n          son: [{ id: \"/spjk\", name: \"视频监控\", order: 0 }]\n        },\n        {\n          id: \"/sjjg\",\n          name: \"监管质量分析\",\n          order: 0,\n          son: [\n            { id: \"/sjjg\", name: \"省级\", order: 0 },\n            { id: \"/shjjg\", name: \"市级\", order: 0 },\n            { id: \"/qxjjg\", name: \"区县级\", order: 0 },\n            { id: \"/qyjjg\", name: \"企业\", order: 0 },\n            { id: \"/gdjjg\", name: \"工地\", order: 0 }\n          ]\n        }\n      ],\n      active: \"home\",\n      opened: []\n    };\n  },\n\n  created() {\n    this.clearCache();\n  },\n\n  mounted() {\n    this.initMenu();\n    // this.subscribe(this.EVENTS.UPDATE_MENU_ACTIVE, \"Menus\", this.monitorRouter);\n  },\n\n  beforeDestroy() {\n    // this.unsubscribe(this.EVENTS.UPDATE_MENU_ACTIVE, \"Menus\");\n  },\n\n  methods: {\n    initMenu() {\n      // let userInfo = this.getSession(this.KEYS.USER_INFO);\n      // if (userInfo !== null) {\n      //     this.post(\"SystemManagerController/getUserMenu\", {\n      //         id: userInfo.userID,\n      //     }).then((res) => {\n      //         this.menuTree = res.data;\n      //         this.initAuthMenu(res.data);\n      //     }).then(() => {\n      //         let hash = window.location.hash;\n      //         let path = \"\";\n      //         if (hash.indexOf(\"?\") >= 0) {\n      //             path = hash.match(/#\\/([\\S]*)\\?/)[1];\n      //         } else {\n      //             path = hash.match(/#\\/([\\S]*)\\??/)[1];\n      //         }\n      //         this.monitorRouter(path)\n      //     });\n      // }\n      let hash = window.location.hash;\n      let path = \"\";\n      if (hash.indexOf(\"?\") >= 0) {\n        path = hash.match(/#\\/([\\S]*)\\?/)[1];\n      } else {\n        path = hash.match(/#\\/([\\S]*)\\??/)[1];\n      }\n      this.monitorRouter(path);\n    },\n\n    //初始化用户菜单权限列表\n    initAuthMenu(tree) {\n      let authMenu = [];\n      for (let parent of tree) {\n        authMenu.push(parent.id);\n        if (parent.son) {\n          for (let son of parent.son) {\n            authMenu.push(son.id);\n          }\n        }\n      }\n    },\n\n    //监听页面路由变化\n    //动态改变菜单展开的项目\n    //动态改变菜单展开的项目\n    monitorRouter(path) {\n      //展开菜单前先判断用户是否有访问权限\n      //遍历menuTree，如果path是二级菜单则需要展开当前path的父级\n      for (let p in this.menuTree) {\n        let parent = this.menuTree[p];\n        if (parent.id === `/${path}`) {\n          this.active = `/${path}`;\n          this.opened = [];\n          return;\n        }\n        for (let s in parent.son) {\n          let son = parent.son[s];\n          let ext = son.id.split(\"-\");\n          ext = ext[0] + \"-\" + ext[1];\n          if (path.indexOf(ext) === 0) {\n            this.active = son.id;\n            this.opened = [parent.id];\n            return;\n          }\n        }\n      }\n    },\n\n    //刷新页面，从菜单栏进入列表时清除搜索条件缓存结果\n    clearCache() {}\n  }\n};\n</script>\n"]}]}