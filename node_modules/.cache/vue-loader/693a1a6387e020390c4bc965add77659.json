{"remainingRequest":"/Users/ningmeng/Desktop/vuewebpage/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ningmeng/Desktop/vuewebpage/src/components/Menus.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/ningmeng/Desktop/vuewebpage/src/components/Menus.vue","mtime":1561520752967},{"path":"/Users/ningmeng/Desktop/vuewebpage/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/ningmeng/Desktop/vuewebpage/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/ningmeng/Desktop/vuewebpage/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/ningmeng/Desktop/vuewebpage/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ningmeng/Desktop/vuewebpage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ningmeng/Desktop/vuewebpage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n.ui-menus-list{\n    background: #3e3f41;\n\n    .el-menu-vertical-demo{\n        border-radius: 0;\n    }\n\n    .el-menu--horizontal.el-menu--dark .el-submenu .el-menu-item.is-active,\n    .el-menu-item.is-active {\n        color: #000;\n        background: #fff !important;\n    }\n    .el-menu-item,\n    .el-submenu__title {\n        color: #fff;\n        height: 51px;\n        line-height: 51px;\n    }\n    .el-menu-item:hover,\n    .el-submenu__title:hover {\n        background: #646567 !important;\n        color: #fff;\n    }\n\n    .el-submenu{\n        .el-menu-item{\n             background: #2b2b2b;\n        }\n    }\n\n}\n",{"version":3,"sources":["Menus.vue"],"names":[],"mappings":";AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA","file":"Menus.vue","sourceRoot":"src/components","sourcesContent":["<style lang=\"scss\">\n    .ui-menus-list{\n        background: #3e3f41;\n\n        .el-menu-vertical-demo{\n            border-radius: 0;\n        }\n\n        .el-menu--horizontal.el-menu--dark .el-submenu .el-menu-item.is-active,\n        .el-menu-item.is-active {\n            color: #000;\n            background: #fff !important;\n        }\n        .el-menu-item,\n        .el-submenu__title {\n            color: #fff;\n            height: 51px;\n            line-height: 51px;\n        }\n        .el-menu-item:hover,\n        .el-submenu__title:hover {\n            background: #646567 !important;\n            color: #fff;\n        }\n\n        .el-submenu{\n            .el-menu-item{\n                 background: #2b2b2b;\n            }\n        }\n\n    }\n</style>\n<style scoped lang=\"scss\">\n    .ui-menus-list {\n        width: 230px;\n        position: absolute;\n        top: 60px;\n        bottom: 0;\n        left: 0;\n        overflow-y: auto;\n\n        .el-menu {\n            height: 100%;\n            background: #3e3f41;\n\n            .el-submenu {\n                border-top: 1px solid #252726;\n            }\n\n            .el-menu-item {\n                border-top: 1px solid #252726;\n            }\n        }\n    }\n</style>\n\n<template>\n    <div class=\"ui-menus-list\">\n        <!--导航菜单-->\n        <el-menu class=\"el-menu-vertical-demo\" unique-opened :default-active=\"active\" :default-openeds=\"opened\" :router=\"true\">\n            <template v-for=\"(pItem, p_index) in menuTree\">\n\n                <template v-if=\"pItem.son === undefined\" >\n                    <el-menu-item :index=\"pItem.id\" :key=\"pItem.id\" @click=\"clearCache\">{{pItem.name}}</el-menu-item>\n                </template>\n\n                <el-submenu v-if=\"pItem.son !== undefined\" :key=\"pItem.id\" :index=\"pItem.id\">\n                    <template slot=\"title\">{{pItem.name}}</template>\n\n                    <template v-for=\"(sItem, s_index) in pItem.son\" >\n                        <el-menu-item :index=\"sItem.id\" :key=\"sItem.id\" @click=\"clearCache\">{{sItem.name}}</el-menu-item>\n                    </template>\n\n                </el-submenu>\n            </template>\n        </el-menu>\n    </div>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                menuTree: [],\n\n                active: 'am-W00002',\n                opened: [],\n            }\n        },\n\n        created(){\n            this.clearCache();\n        },\n\n        mounted() {\n            this.initMenu();\n            this.subscribe(this.EVENTS.UPDATE_MENU_ACTIVE, \"Menus\", this.monitorRouter);\n        },\n\n        beforeDestroy(){\n            this.unsubscribe(this.EVENTS.UPDATE_MENU_ACTIVE, \"Menus\");\n        },\n\n        methods: {\n            initMenu(){\n                let userInfo = this.getSession(this.KEYS.USER_INFO);\n                if (userInfo !== null) {\n                    this.post(\"SystemManagerController/getUserMenu\", {\n                        id: userInfo.userID,\n                    }).then((res) => {\n                        this.menuTree = res.data;\n                        this.initAuthMenu(res.data);\n                    }).then(() => {\n                        let hash = window.location.hash;\n                        let path = \"\";\n                        if (hash.indexOf(\"?\") >= 0) {\n                            path = hash.match(/#\\/([\\S]*)\\?/)[1];\n                        } else {\n                            path = hash.match(/#\\/([\\S]*)\\??/)[1];\n                        }\n                        this.monitorRouter(path)\n                    });\n                }\n            },\n\n            //初始化用户菜单权限列表\n            initAuthMenu(tree){\n                let authMenu = [];\n                for(let parent of tree){\n                    authMenu.push(parent.id)\n\n                    if(parent.son){\n                        for(let son of parent.son){\n                            authMenu.push(son.id)\n                        }\n                    }\n                }\n                this.setSession(this.KEYS.USER_AUTH_MENU, this.$md5(...authMenu));\n            },\n\n            /*verificationUserAuth(path){\n                console.info(\"=======当前路径======\",path);\n                if(this.authMenu.includes(path)){\n                    return true;\n                }else{\n                    //history.go(-1);\n                    return alert(\"您暂无权限查看，请联系管理员开通\")\n                }\n            },*/\n\n            //监听页面路由变化\n            //动态改变菜单展开的项目\n            monitorRouter(path){\n                //展开菜单前先判断用户是否有访问权限\n                //遍历menuTree，如果path是二级菜单则需要展开当前path的父级\n                for(let p in this.menuTree){\n                    let parent = this.menuTree[p];\n\n                    if(parent.id === path){\n                        this.active = path;\n                        this.opened = [];\n                        this.$pageInOperation(path);\n                        return;\n                    }\n                    for(let s in parent.son){\n                        let son = parent.son[s];\n                        let ext = son.id.split(\"-\");\n                        ext = ext[0] + '-' + ext[1];\n\n                        if(path.indexOf(ext) === 0){\n                            this.active = son.id;\n                            this.opened = [parent.id];\n                            this.$pageInOperation(path);\n                            return;\n                        }\n                    }\n                }\n            },\n\n            //刷新页面，从菜单栏进入列表时清除搜索条件缓存结果\n            clearCache(){\n                this.setSession(this.KEYS.SEARCH_CACHE)\n            }\n        }\n    }\n</script>\n"]}]}