{"remainingRequest":"/Users/ningmeng/Desktop/vuewebpage/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ningmeng/Desktop/vuewebpage/src/components/HomeTitle.vue?vue&type=style&index=0&id=6409378e&scoped=true&lang=scss&","dependencies":[{"path":"/Users/ningmeng/Desktop/vuewebpage/src/components/HomeTitle.vue","mtime":1567580628951},{"path":"/Users/ningmeng/Desktop/vuewebpage/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/ningmeng/Desktop/vuewebpage/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/ningmeng/Desktop/vuewebpage/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/ningmeng/Desktop/vuewebpage/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ningmeng/Desktop/vuewebpage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ningmeng/Desktop/vuewebpage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n.home-title {\n    display: block;\n    min-width: 1090px;\n\n    .header {\n        height: 60px;\n        line-height: 60px;\n        background: #3e3f41;\n        color: #fff;\n\n        .logo {\n            height: 60px;\n\n            img {\n                width: 108px;\n                margin: 12px 10px 12px 18px;\n                cursor: pointer;\n            }\n\n            .menu-hide-btn {\n                display: inline-block;\n                height: 60px;\n                width: 20px;\n                background: url(\"../../../static/img/pageHeaderMenuIcon/page_header_menu_hide_icon.png.png\") center no-repeat;\n                background-size: contain;\n                margin-left: 30px;\n                cursor: pointer;\n            }\n        }\n\n        .clock {\n            font-size: 14px;\n            text-align: center;\n        }\n\n        .user-info {\n\n            .user-head {\n                width: 40px;\n                height: 40px;\n                border-radius: 50%;\n                display: inline-block;\n                margin: 10px;\n                float: left;\n            }\n\n            .user-info-inner {\n                cursor: pointer;\n                font-size: 14px;\n                display: inline-block;\n                line-height: 60px;\n                color: #ffffff;\n                position: relative;\n\n                &::after {\n                    content: \" \";\n                    position: absolute;\n                    display: inline-block;\n                    height: 15px;\n                    width: 15px;\n                    background: url(\"../../../static/img/pageHeaderMenuIcon/page_header_menu_drop_down_icon.png\") center no-repeat;\n                    background-size: contain;\n                    top: 22px;\n                    right: -26px;\n                }\n            }\n        }\n    }\n}\n\n//此元素不包含在当前组件中，所以不放在home-title类下面\n.page-title-drop-down-menu {\n    padding: 0;\n\n    &::before {\n        position: absolute;\n        content: \" \";\n        border: 10px dashed #ffffff;\n        border-top-width: 0;\n        border-right-color: transparent;\n        border-bottom-style: solid;\n        border-left-color: transparent;\n        top: -10px;\n        right: 45%;\n    }\n\n    .el-dropdown-menu__item {\n        font-size: 14px;\n        color: #666;\n        background: #f0f0f0;\n        text-align: center;\n\n        /*覆盖分割线的样式*/\n        &.el-dropdown-menu__item--divided {\n            margin: 0;\n\n            &::before {\n                margin: 0;\n                height: 0;\n            }\n        }\n\n        &:hover {\n            background: #fff;\n        }\n\n        .drop-down-icon {\n            display: inline-block;\n            height: 20px;\n            width: 20px;\n            margin-right: 5px;\n\n            &.modify-password-icon {\n                background: url(\"../../../static/img/pageHeaderMenuIcon/page_header_menu_modify_password_icon.png\") center / contain no-repeat;\n            }\n\n            &.logout-icon {\n                background: url(\"../../../static/img/pageHeaderMenuIcon/page_header_menu_logout_icon.png\") center / contain no-repeat;\n            }\n\n            &.download-app-icon {\n                background: url(\"../../../static/img/pageHeaderMenuIcon/page_header_menu_download_app_icon.png\") center / contain no-repeat;\n            }\n        }\n\n        span {\n            vertical-align: middle;\n        }\n    }\n\n}\n\n.message-count {\n    position: absolute;\n    top: 35px;\n    color: #FFF;\n    background-color: RED;\n    display: block;\n    text-align: center;\n    line-height: 20px;\n    width: 20px;\n    border-radius: 20px;\n}\n",{"version":3,"sources":["HomeTitle.vue"],"names":[],"mappingsfile":"HomeTitle.vue","sourceRoot":"src/components","sourcesContent":["<style scoped lang=\"scss\">\n    .home-title {\n        display: block;\n        min-width: 1090px;\n\n        .header {\n            height: 60px;\n            line-height: 60px;\n            background: #3e3f41;\n            color: #fff;\n\n            .logo {\n                height: 60px;\n\n                img {\n                    width: 108px;\n                    margin: 12px 10px 12px 18px;\n                    cursor: pointer;\n                }\n\n                .menu-hide-btn {\n                    display: inline-block;\n                    height: 60px;\n                    width: 20px;\n                    background: url(\"../../../static/img/pageHeaderMenuIcon/page_header_menu_hide_icon.png.png\") center no-repeat;\n                    background-size: contain;\n                    margin-left: 30px;\n                    cursor: pointer;\n                }\n            }\n\n            .clock {\n                font-size: 14px;\n                text-align: center;\n            }\n\n            .user-info {\n\n                .user-head {\n                    width: 40px;\n                    height: 40px;\n                    border-radius: 50%;\n                    display: inline-block;\n                    margin: 10px;\n                    float: left;\n                }\n\n                .user-info-inner {\n                    cursor: pointer;\n                    font-size: 14px;\n                    display: inline-block;\n                    line-height: 60px;\n                    color: #ffffff;\n                    position: relative;\n\n                    &::after {\n                        content: \" \";\n                        position: absolute;\n                        display: inline-block;\n                        height: 15px;\n                        width: 15px;\n                        background: url(\"../../../static/img/pageHeaderMenuIcon/page_header_menu_drop_down_icon.png\") center no-repeat;\n                        background-size: contain;\n                        top: 22px;\n                        right: -26px;\n                    }\n                }\n            }\n        }\n    }\n\n    //此元素不包含在当前组件中，所以不放在home-title类下面\n    .page-title-drop-down-menu {\n        padding: 0;\n\n        &::before {\n            position: absolute;\n            content: \" \";\n            border: 10px dashed #ffffff;\n            border-top-width: 0;\n            border-right-color: transparent;\n            border-bottom-style: solid;\n            border-left-color: transparent;\n            top: -10px;\n            right: 45%;\n        }\n\n        .el-dropdown-menu__item {\n            font-size: 14px;\n            color: #666;\n            background: #f0f0f0;\n            text-align: center;\n\n            /*覆盖分割线的样式*/\n            &.el-dropdown-menu__item--divided {\n                margin: 0;\n\n                &::before {\n                    margin: 0;\n                    height: 0;\n                }\n            }\n\n            &:hover {\n                background: #fff;\n            }\n\n            .drop-down-icon {\n                display: inline-block;\n                height: 20px;\n                width: 20px;\n                margin-right: 5px;\n\n                &.modify-password-icon {\n                    background: url(\"../../../static/img/pageHeaderMenuIcon/page_header_menu_modify_password_icon.png\") center / contain no-repeat;\n                }\n\n                &.logout-icon {\n                    background: url(\"../../../static/img/pageHeaderMenuIcon/page_header_menu_logout_icon.png\") center / contain no-repeat;\n                }\n\n                &.download-app-icon {\n                    background: url(\"../../../static/img/pageHeaderMenuIcon/page_header_menu_download_app_icon.png\") center / contain no-repeat;\n                }\n            }\n\n            span {\n                vertical-align: middle;\n            }\n        }\n\n    }\n\n    .message-count {\n        position: absolute;\n        top: 35px;\n        color: #FFF;\n        background-color: RED;\n        display: block;\n        text-align: center;\n        line-height: 20px;\n        width: 20px;\n        border-radius: 20px;\n    }\n</style>\n\n<template>\n    <div class=\"home-title\">\n        <el-row>\n            <el-col :span=\"24\" class=\"header\">\n                <el-col :span=\"6\" :offset=\"1\" class=\"logo\" >\n                    <img src=\"../../../static/img/logo_white.png\" @click=\"goHome\"/>\n                    <span class=\"menu-hide-btn\" @click=\"toggleHideMenu\"></span>\n                </el-col>\n                <el-col :span=\"4\" :offset=\"7\" class=\"clock\">\n                    {{sysDate}}\n                </el-col>\n\n                <el-col :span=\"5\" :offset=\"1\" class=\"user-info\" style=\"font-size:16px;\">\n                    <el-dropdown @command=\"handleCommand\" trigger=\"click\">\n                      <span class=\"el-dropdown-link\">\n                           <img class=\"user-head\" :src=\"sysUserAvatar\"/>\n                           <span class=\"user-info-inner\">{{sysUserName}}</span>\n                           <span class=\"message-count\">{{unReadMessageCount}}</span>\n                      </span>\n                        <el-dropdown-menu slot=\"dropdown\" class=\"page-title-drop-down-menu\">\n                            <el-dropdown-item command=\"modifyPassword\"><span\n                                class=\"drop-down-icon modify-password-icon\"></span><span>修改密码</span></el-dropdown-item>\n\n                            <el-dropdown-item divided command=\"downloadApp\"><span\n                                class=\"drop-down-icon download-app-icon\"></span><span>下载APP</span></el-dropdown-item>\n\n                            <el-dropdown-item divided command=\"message\"><span\n                                class=\"drop-down-icon el-icon-message\"></span><span>个人消息</span></el-dropdown-item>\n\n                            <el-dropdown-item divided command=\"confirmLogout\"><span\n                                class=\"drop-down-icon logout-icon\"></span><span>退出登录</span></el-dropdown-item>\n                        </el-dropdown-menu>\n                    </el-dropdown>\n                </el-col>\n\n            </el-col>\n        </el-row>\n    </div>\n</template>\n\n<script>\n    import defaultHead from \"../assets/logo.png\";\n\n    export default {\n\n        props: {\n            icon: {\n                type: String,\n                default: \"\",\n            },\n            title: {\n                type: String,\n                default: \"\",\n            },\n        },\n\n        data() {\n            return {\n                client: null,\n                sysDate: '',\n                sysUserAvatar: '',\n                sysUserName: '',\n                unReadMessageCount: 0,\n                clockTimer: null,\n                userId: \"\",\n                stompClient: {},\n            }\n        },\n\n        created() {\n            this.setSession(this.KEYS.SOCKET_CONNECTED, false);\n            this.setSession(this.KEYS.UN_READ_MESSAGE, true);\n            let userInfo = this.getSession(this.KEYS.USER_INFO);\n            if (userInfo !== null) {\n                this.userId = userInfo.userID;\n            }\n           this.listenSocket();\n            //设置定时器，每一秒更新一次时间\n            this.sysDate = new Date().Format(`yyyy-MM-dd  ${this.week()}  hh:mm:ss`);\n            this.clockTimer = setInterval(() => {\n                this.sysDate = new Date().Format(`yyyy-MM-dd  ${this.week()}  hh:mm:ss`);\n            }, 60000);\n            this.unReadTimer = setInterval(() => {\n                let canRequest = this.getSession(this.KEYS.UN_READ_MESSAGE);\n                if (!!canRequest) {\n                    this.getUnReadMsgCount();\n                }\n            }, 60000);\n            this.connect()\n        },\n\n        mounted() {\n            let userInfo = this.getSession(this.KEYS.USER_INFO);\n            if (userInfo !== null) {\n                this.sysUserName = userInfo.name;\n                this.sysUserAvatar = userInfo.portrait === \"\" ? defaultHead : this.concatFileUrl(userInfo.portrait);\n                // this.sysUserAvatar = \"https://img.guoanfamily.com/20170606151703_WechatIMG247.jpeg\";\n            }\n        },\n\n        beforeDestroy() {\n            clearInterval(this.clockTimer);\n            // clearInterval(this.unReadTimer);\n        },\n\n        methods: {\n            connect(){\n                var headers = {'name':  this.userId}\n                var socket = new SockJS(this.SOCKET_SERVER+\"/server\");\n                this.stompClient = Stomp.over(socket);\n                this.stompClient.connect(headers, this.onConnected, this.onFailed)\n            },\n            disconnect() {\n                if (this.stompClient != null) {\n                    this.stompClient.disconnect();\n                }\n            },\n            onConnected(frame){\n                var topic = '/topic/menu/'+this.userId\n                this.stompClient.subscribe(topic, this.responseCallback, this.onFailed);\n            },\n            responseCallback(frame) {\n                this.$router.push({path: frame.body});\n            },\n            onFailed(frame){\n                console.log('Failed: ' + frame)\n            },\n            listenSocket() {\n                let socket =this.getSession(this.KEYS.SOCKET_CONNECTED);\n                if ((!!this.userId) && !(!!socket)) {\n                    console.log('用户是登录状态,但并未创建socket连接');\n\n                    // noinspection JSUnresolvedVariable,JSUnresolvedFunction\n                    this.client = Stomp.over(new SockJS(this.SOCKET_SERVER + \"/message\"));\n                    // 关闭 debug\n                    this.client.debug = null;\n\n                    let headers = {\"userId\": this.userId, \"userAgent\": navigator.userAgent};\n\n                    let success = (conn) => {\n                        this.setSession(this.KEYS.SOCKET_CONNECTED, true);\n                        this.client.subscribe(\"/user/topic/notice\", (resp) => {\n                            console.log('Response: ' + resp.body);\n                            // 计算未读数量\n                            this.getUnReadMsgCount();\n                            let message = JSON.parse(resp.body);\n                            this.$notify({\n                                title: message.title,\n                                message: message.content,\n                                // 抛弃自带样式使用自定义标题\n                                // type: message.level,\n                                customClass: \"xa\",\n                                position: 'bottom-right',\n                                duration: 4500,\n                                showClose: true,\n                            });\n                        });\n                    };\n\n                    let error = (err) => {\n                        this.setSession(this.KEYS.SOCKET_CONNECTED, false);\n                        this.listenSocket();\n                        console.error('Failed: ' + err);\n                    };\n\n                    this.client.connect(headers, success, error);\n                }\n            },\n\n            closeSocket() {\n                if (this.client != null) {\n                    this.client.disconnect( ()=> {\n                        this.setSession(this.KEYS.SOCKET_CONNECTED, false);\n                        console.log(\"socket 消息推送服务断开连接\")\n                    });\n                }\n            },\n\n            getUnReadMsgCount() {\n                   this.post(\"pushMessage/unReadCount\", {\n                       \"userId\": this.userId\n                   }).then((res) => {\n                       this.setSession(this.KEYS.UN_READ_MESSAGE, false);\n                       this.unReadMessageCount = res.data;\n                   })\n            },\n\n            //退出登录\n            confirmLogout() {\n                this.$confirm('确认退出吗?', '提示', {}).then(() => {\n                    this.closeSocket();\n                    this.disconnect();\n                    this.setSession(this.KEYS.UN_READ_MESSAGE,true);\n                    this.setSession(this.KEYS.USER_INFO);\n                    this.setSession(this.KEYS.OPERATION_ID);\n                    this.$emit('logout', false);\n                }).catch(() => {\n\n                });\n\n            },\n\n            week() {\n                let day = new Date().getDay();\n                let str = \"星期\";\n\n                switch (day) {\n                    case 0:\n                        str += \"日\";\n                        break;\n                    case 1:\n                        str += \"一\";\n                        break;\n                    case 2:\n                        str += \"二\";\n                        break;\n                    case 3:\n                        str += \"三\";\n                        break;\n                    case 4:\n                        str += \"四\";\n                        break;\n                    case 5:\n                        str += \"五\";\n                        break;\n                    case 6:\n                        str += \"六\";\n                        break;\n                }\n\n                return str;\n            },\n\n            goHome() {\n                this.$router.push(\"/am-W00002\");\n            },\n\n            handleCommand(command) {\n                switch (command) {\n                    case \"modifyPassword\":\n                        this.$router.push(\"modifyPassword\");\n                        break;\n                    case \"confirmLogout\":\n                        this.confirmLogout();\n                        break;\n                    case \"downloadApp\":\n                        this.$router.push(\"downloadApp\");\n                        break;\n                    case \"message\":\n                        this.$router.push(\"message\");\n                        break;\n                    default:\n                        break;\n                }\n            },\n\n            //切换展示或隐藏菜单\n            toggleHideMenu() {\n                this.$emit('toggleHideMenu');\n            }\n        },\n\n        computed: {},\n        watch: {}\n    }\n</script>\n"]}]}